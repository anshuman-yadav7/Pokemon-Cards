{"version":3,"sources":["services/pokemon.js","components/Cards/Card.js","components/Navbar/Navbar.js","components/Footer/Footer.js","components/PokemonDetails/PokemonDetails.js","App.js","reportWebVitals.js","index.js"],"names":["getAllPokemon","url","a","Promise","resolve","reject","fetch","then","res","json","data","Card","pokemon","onClick","className","src","sprites","front_default","alt","name","types","map","type","index","weight","height","abilities","ability","Navbar","id","Footer","PokemonDetails","props","closeDetails","item","join","App","useState","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","searchPokemon","setSearchPokemon","pokemonDetailsVisible","setPokemonDetailsVisible","currentPokemonData","setCurrentPokemonDataState","currentPage","setCurrentPage","initialUrl","useEffect","response","loadingPokemon","results","next","fetchData","mainContainer","document","querySelector","console","log","addEventListener","isElementInView","scrollTop","scrollUpIcon","behindScrollButton","classList","add","remove","previous","prev","all","pokemonRecord","_pokemonData","filteredData","filter","val","toLowerCase","includes","placeholder","onChange","event","target","value","href","setCurrentPokemonData","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f48194a6.chunk.js","sourcesContent":["export async function getAllPokemon(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            resolve(data);\r\n        })\r\n    });\r\n}\r\n\r\nexport async function getPokemon(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            resolve(data);\r\n        })\r\n    }) \r\n}","import React from \"react\";\r\nimport './Card.css';\r\n\r\nexport default function Card({pokemon, onClick}) {\r\n    return (\r\n        <div className=\"card\" onClick={()=>onClick()}>\r\n            <div className=\"card-img\">\r\n                <img src={pokemon.sprites.front_default} alt=\"Pokemon Image\" />\r\n                <p className=\"card-name\">\r\n                    {pokemon.name}\r\n                </p>\r\n            </div>\r\n            \r\n            <div className=\"card-types\">\r\n                {\r\n                    pokemon.types.map((type, index) => {\r\n                        return (\r\n                            <div key={index} className=\"card-type\">\r\n                                {type.type.name}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"card-info\">\r\n                <div className=\"card-data\">\r\n                    <p className=\"title\">Weight</p>\r\n                    <p>{pokemon.weight}</p>\r\n                </div>\r\n                <div className=\"card-data\">\r\n                    <p className=\"title\">Height</p>\r\n                    <p>{pokemon.height}</p>\r\n                </div>\r\n                <div className=\"card-data\">\r\n                    <p className=\"title\">Ability</p>\r\n                    <p>{pokemon.abilities[0].ability.name}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './Navbar.css';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className=\"navbar\" id=\"nav-bar\">\r\n            <p className=\"nav-title\">Pokemon Cards</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport './Footer.css';\r\nimport { AiFillHeart } from \"react-icons/ai\";\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-content\">\r\n                <p className=\"footer-title\">Made with</p>\r\n                <span className=\"heart-icon\"><AiFillHeart/></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './PokemonDetails.css'\r\n\r\n\r\nexport default function PokemonDetails(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"btn btn-common\">\r\n                <button onClick={props.closeDetails}>Back</button>\r\n            </div>\r\n            \r\n            <div className=\"pokemon-card card\">\r\n                <div className=\"card-img\">\r\n                    <img src={props.data.sprites.front_default} alt=\"\" />\r\n                    <p className=\"card-name\">\r\n                        {props.data.name}\r\n                    </p>\r\n                </div>\r\n            \r\n                <div className=\"card-types\">\r\n                    {\r\n                        props.data.types.map((type,index) => {\r\n                            return (\r\n                                <div key={index} className=\"card-type\">\r\n                                    {type.type.name}\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"card-info\">\r\n                    <div className=\"card-data\">\r\n                        <p className=\"title\">Weight</p>\r\n                        <p>{props.data.weight}</p>\r\n                    </div>\r\n                    <div className=\"card-data\">\r\n                        <p className=\"title\">Height</p>\r\n                        <p>{props.data.height}</p>\r\n                    </div>\r\n                    <div className=\"card-data\">\r\n                        <p className=\"title\">Ability</p>\r\n                        <p>\r\n                            {\r\n                                props.data.abilities.map(item => {\r\n                                    return item.ability.name\r\n                                }).join(\", \")\r\n                            }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport { getAllPokemon } from './services/pokemon';\r\n\r\nimport Card from './components/Cards/Card';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Footer from './components/Footer/Footer';\r\nimport PokemonDetails from './components/PokemonDetails/PokemonDetails';\r\n\r\nimport './App.css';\r\n\r\nimport { MdOutlineArrowBackIosNew, MdOutlineArrowForwardIos } from 'react-icons/md';\r\nimport { BsFillArrowUpCircleFill } from 'react-icons/bs';\r\n\r\nexport default function App() {\r\n\r\n  const [pokemonData, setPokemonData] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState('');\r\n  const [prevUrl, setPrevUrl] = useState(['']);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchPokemon, setSearchPokemon] = useState('');\r\n  const [pokemonDetailsVisible, setPokemonDetailsVisible] = useState(false);\r\n  const [currentPokemonData, setCurrentPokemonDataState] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await getAllPokemon(initialUrl);\r\n      const pokemon = await loadingPokemon(response.results);\r\n      setNextUrl(response.next);\r\n      setPrevUrl(response.prevUrl);\r\n      setLoading(false);\r\n      setCurrentPage(0);\r\n    }\r\n    fetchData();\r\n\r\n    const mainContainer = document.querySelector('.main-container');\r\n    console.log(mainContainer);\r\n    mainContainer.addEventListener('scroll', () => {\r\n      const isElementInView = mainContainer.scrollTop < 100;\r\n      const scrollUpIcon = document.querySelector('.up-icon');\r\n      console.log(scrollUpIcon);\r\n      const behindScrollButton = document.querySelector('.behind-up-icon');\r\n\r\n      if(scrollUpIcon && behindScrollButton) {\r\n        if(isElementInView) {\r\n          scrollUpIcon.classList.add('hidden');\r\n          behindScrollButton.classList.add('hidden');\r\n        }\r\n        else {\r\n          scrollUpIcon.classList.remove('hidden');\r\n          behindScrollButton.classList.remove('hidden');\r\n        }\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  const next = async () => {\r\n    setLoading(true);\r\n    const data = await getAllPokemon(nextUrl);\r\n    await loadingPokemon(data.results);\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n    setCurrentPage(currentPage + 1);\r\n  }\r\n\r\n  const prev = async () => {\r\n    if (!prevUrl || currentPage <= 0) return;\r\n    setLoading(true);\r\n    const data = await getAllPokemon(prevUrl);\r\n    await loadingPokemon(data.results);\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n    setCurrentPage(currentPage - 1);\r\n  }\r\n\r\n  const loadingPokemon = async (data) => {\r\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\r\n      let pokemonRecord = await getAllPokemon(pokemon.url);\r\n      return pokemonRecord;\r\n    }))\r\n\r\n    setPokemonData(_pokemonData);\r\n  }\r\n\r\n  const filteredData = pokemonData.filter(val => \r\n    val.name.toLowerCase().includes(searchPokemon.toLowerCase())\r\n  );\r\n\r\n  const setCurrentPokemonData = pokemon => {\r\n    setCurrentPokemonDataState(pokemon);\r\n    setPokemonDetailsVisible(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className='main-container'>\r\n        {\r\n          loading ? <h1 className='loading-text'>Loading...</h1> : (\r\n            <>\r\n              <div className='button-input' id='search-bar'>\r\n                <input className='search-pokemon' type='text' placeholder='Search pokemon' onChange = {\r\n                    event => {\r\n                      setSearchPokemon(event.target.value)\r\n                      if(pokemonDetailsVisible) setPokemonDetailsVisible(false);\r\n                    }\r\n                  }>  \r\n                </input>\r\n              </div>\r\n                \r\n              <div className='grid-container'>\r\n                <a href='#search-bar' className='scrollToTop'>\r\n                  <div className='up-icon hidden'><BsFillArrowUpCircleFill /></div>\r\n                  <div className='behind-up-icon hidden'></div>\r\n                </a>\r\n\r\n                {\r\n                  !pokemonDetailsVisible && \r\n                  <>\r\n                    {\r\n                      currentPage !== 0 && \r\n                      <div className='pagination-arrows left-arrow' onClick={prev}><MdOutlineArrowBackIosNew /></div>\r\n                    }\r\n                    <div className='pagination-arrows right-arrow' onClick={next}><MdOutlineArrowForwardIos /></div>\r\n                  </>\r\n                }\r\n\r\n                {\r\n                  pokemonDetailsVisible ? \r\n                    <PokemonDetails data={currentPokemonData} closeDetails={()=>{setPokemonDetailsVisible(false)}}/> :\r\n                    filteredData.map((pokemon, index) => {\r\n                      return <Card key={index} onClick={() => setCurrentPokemonData(pokemon)} pokemon={pokemon}/>\r\n                    })\r\n                }\r\n\r\n                {\r\n                  !filteredData.length && <h1 className='no-result'>No Pokemon Found</h1>\r\n                }\r\n              </div>\r\n            </>\r\n          )\r\n        }\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}